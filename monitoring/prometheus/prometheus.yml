# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load and evaluate rules in this file every  gc'evaluation_interval' seconds.
rule_files:
  - "rules/alert.*"

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: 'node'
    scrape_interval: 10s
    scrape_timeout: 5s
    static_configs:
      - targets: ['master-nodeexporter:9100', 'nas:9100']
        labels: 
          group: 'node-exporters'

  - job_name: 'containers'
    scrape_interval: 10s
    scrape_timeout: 5s
    # autodiscover using dns cadvisor
    static_configs:
      - targets: ['master-cadvisor:8080']
#        labels: {'host': 'host1'}

  #Will/23.08.16: dcom restart prometheus suffices to load config/rule changes

  - job_name: 'prometheus-server'
    scrape_interval: 10s
    scrape_timeout: 5s
    static_configs:
      - targets: ['localhost:9090']
#        labels: {'host': 'host1'}

  - job_name: 'snmp'
#    static_configs:
#      - targets:
#        - 192.168.0.254  # SNMP device.
    file_sd_configs:
      - files:
        - /etc/prometheus/snmp.yml
    metrics_path: /snmp
    params:
      module: [router]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: snmpexporter:9116  # The SNMP exporter's real hostname:port.
  # see https://github.com/prometheus/blackbox_exporter relabel 
  - job_name: 'service'
    scrape_interval: 60s
    scrape_timeout: 15s
    metrics_path: /probe
    # if your target is https, you either need to install cert in blackbox proble container
    # or add below line to ignore verify
    tls_config:
      insecure_skip_verify: true
    params:
      module: [http_2xx]  # Look for a HTTP 200 response. 
    file_sd_configs:
      - files:
        - /etc/prometheus/service.yml
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackboxprober:9115

  - job_name: 'host'
    scrape_interval: 60s
    scrape_timeout: 15s
    metrics_path: /probe
    params:
      module: [icmp_ipv4]
    file_sd_configs:
      - files:
        - /etc/prometheus/hosts.yml
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackboxprober:9115

